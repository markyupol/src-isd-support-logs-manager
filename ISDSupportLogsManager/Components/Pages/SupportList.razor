@page "/"

@using ISDSupportLogsManager.Shared.Model
@using Radzen
@using Radzen.Blazor
@using System.Globalization

<div class="container" style="padding-left: 0; padding-right: 0;">
    <div class="d-flex gap-2">
        <!-- First square with icon -->
        <button class="square rounded-square border-0">
            <img src="https://img.icons8.com/emoji/48/card-file-box-emoji.png" alt="Icon 1" class="icon">
        </button>

        <!-- Flexible div -->
        <div class="flexible rounded-square d-flex justify-content-between align-items-center px-2">
            <div class="p-2" style="margin: 0; color: white; font-weight: bold;">Infrastructure</div>
            <div class="p-2" style="margin: 0; color: white; font-weight: normal; font-size: 0.9rem;">150 logs</div>
        </div>

        <!-- Third square with icon -->
        <button class="square-small rounded-square" style="border: none; cursor: pointer;" @onclick="ShowForm">
            <img src="https://img.icons8.com/fluency/48/add--v1.png" alt="Icon 3" class="icon">
        </button>

        <!-- Fourth square with icon -->
        <div class="square-small rounded-square">
            <img src="https://img.icons8.com/color/48/microsoft-excel-2019--v1.png" alt="Icon 4" class="icon">
        </div>
    </div>
</div>

@if (isFormVisible)
{
    <div class="modal-overlay" @onclick="HideForm">
        <div class="modal-container" @onclick:stopPropagation="true">
            <form>
                <RadzenSteps Change=@OnChange @rendermode="RenderMode.InteractiveServer">
                    <Steps>
                        <RadzenStepsItem Text="Where">
                            <div class="form-container">
                                <div class="form-group">
                                    <RadzenLabel Text="Shift" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                    <RadzenDropDownDataGrid @bind-Value=@Support.Shift Data=@Shifts Name="DropDownDataGridBindValue"
                                                            TextProperty="@("Name")" class="dropdown" />
                                </div>
                                <div class="form-group">
                                    <RadzenLabel Text="Business Area" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                    <RadzenDropDownDataGrid @bind-Value=@Support.Biz Data=@Bizs Name="DropDownDataGridBindValue"
                                                            TextProperty="@("Name")" class="dropdown" />
                                </div>
                                <div class="form-group">
                                    <RadzenLabel Text="Department" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                    <RadzenDropDownDataGrid @bind-Value=@Support.Department Data=@Departments Name="DropDownDataGridBindValue"
                                                            TextProperty="@("Name")" class="dropdown" />
                                </div>
                            </div>
                            <button type="button" @onclick="HideForm" class="btn btn-danger">Cancel</button>
                        </RadzenStepsItem>
                        <RadzenStepsItem Text="When">
                            <div class="form-container">
                                <div class="form-group">
                                    <RadzenLabel Text="Start Date" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                    <RadzenDatePicker @bind-Value=@Support.StartDate class="datepicker" />
                                    <RadzenDatePicker @bind-Value=@Support.StartTime ShowSeconds="true" DateFormat="HH:mm" Name="DatePickerTimeOnlyType" class="timepicker" />
                                </div>
                                <div class="form-group">
                                    <RadzenLabel Text="End Date" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                    <RadzenDatePicker @bind-Value=@Support.EndDate class="datepicker" />
                                    <RadzenDatePicker @bind-Value=@Support.EndTime ShowSeconds="true" DateFormat="HH:mm" Name="DatePickerTimeOnlyType" class="timepicker" />
                                </div>
                            </div>
                            <button type="button" @onclick="HideForm" class="btn btn-danger">Cancel</button>
                        </RadzenStepsItem>
                        <RadzenStepsItem Text="What">
                            <div class="form-container">
                                <div class="form-group">
                                    <RadzenLabel Text="Category" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                    <RadzenDropDownDataGrid @bind-Value=@Support.Category Data=@Categorys Name="DropDownDataGridBindValue"
                                                            TextProperty="@("Name")" class="dropdown" />
                                </div>
                                <div class="form-group">
                                    <RadzenLabel Text="Details" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                    <RadzenTextArea @bind-Value=@Support.Details Style="width: 100%" aria-label="TextArea" />
                                </div>
                                <div class="form-group">
                                    <RadzenLabel Text="Cause" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                    <RadzenTextArea @bind-Value=@Support.Cause Style="width: 100%" aria-label="TextArea" />
                                </div>
                            </div>
                            <button type="button" @onclick="HideForm" class="btn btn-danger">Cancel</button>
                        </RadzenStepsItem>
                        <RadzenStepsItem Text="How">
                            <div class="form-group">
                                <RadzenLabel Text="Action Taken" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                <RadzenTextArea @bind-Value=@Support.ActionTaken Style="width: 100%" aria-label="TextArea" />
                            </div>
                            <button type="button" @onclick="HideForm" class="btn btn-danger">Cancel</button>
                        </RadzenStepsItem>
                        <RadzenStepsItem Text="Summary">
                            <div class="form-group">
                                <RadzenLabel Text="Shift" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                <RadzenTextBox Value=@Support.Shift.Name ReadOnly="true" class="dropdown" />
                            </div>
                            <div class="form-group">
                                <RadzenLabel Text="Business Area" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                <RadzenTextBox Value=@Support.Biz.Name ReadOnly="true" class="dropdown" />
                            </div>
                            <div class="form-group">
                                <RadzenLabel Text="Department" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                <RadzenTextBox Value=@Support.Department.Name ReadOnly="true" class="dropdown" />
                            </div>
                            <div class="form-group">
                                <RadzenLabel Text="Shift" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                <RadzenTextBox Value=@Support.Shift.Name ReadOnly="true" class="dropdown" />
                            </div>
                            <div class="form-group">
                                <RadzenLabel Text="Business Area" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                <RadzenTextBox Value=@Support.Biz.Name ReadOnly="true" class="dropdown" />
                            </div>
                            <div class="form-group">
                                <RadzenLabel Text="Department" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                <RadzenTextBox Value=@Support.Department.Name ReadOnly="true" class="dropdown" />
                            </div>
                            <div class="form-group">
                                <RadzenLabel Text="Shift" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                <RadzenTextBox Value=@Support.Shift.Name ReadOnly="true" class="dropdown" />
                            </div>
                            <div class="form-group">
                                <RadzenLabel Text="Business Area" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                <RadzenTextBox Value=@Support.Biz.Name ReadOnly="true" class="dropdown" />
                            </div>
                            <div class="form-group">
                                <RadzenLabel Text="Department" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                <RadzenTextBox Value=@Support.Department.Name ReadOnly="true" class="dropdown" />
                            </div>
                            <button type="button" @onclick="HideForm" class="btn btn-danger">Cancel</button>
                            <button type="submit" class="btn btn-success">Submit</button>
                        </RadzenStepsItem>
                    </Steps>
                </RadzenSteps>
            </form>
        </div>
    </div>
}

@code {

    protected override void OnInitialized()
    {
        // Initialize your data here
        data = new List<MyItemType>
        {
            new MyItemType { Id = 1, Name = "Item 1", Description = "Description 1" },
            new MyItemType { Id = 2, Name = "Item 2", Description = "Description 2" },
            new MyItemType { Id = 3, Name = "Item 3", Description = "Description 3" },
            new MyItemType { Id = 4, Name = "Item 4", Description = "Description 4" },
            new MyItemType { Id = 1, Name = "Item 1", Description = "Description 1" },
            new MyItemType { Id = 2, Name = "Item 2", Description = "Description 2" },
            new MyItemType { Id = 3, Name = "Item 3", Description = "Description 3" },
            new MyItemType { Id = 4, Name = "Item 4", Description = "Description 4" },
            new MyItemType { Id = 1, Name = "Item 1", Description = "Description 1" },
        };

        Sections = new List<Section>()
        {
         new Section { SectionId = 0, Name = "INFRA", Description = "Infrastructure" },
         new Section { SectionId = 0, Name = "ERPS", Description = "SAP Systems" },
         new Section { SectionId = 0, Name = "NON PROD", Description = "Admin and HR" },
         new Section { SectionId = 0, Name = "PROD", Description = "Manufacturing" }
        };

        Shifts = new List<Shift>()
        {
            new Shift { ShiftId = 0, Name = "D3", Description = "" },
            new Shift { ShiftId = 0, Name = "D4", Description = "" },
            new Shift { ShiftId = 0, Name = "E3", Description = "" },
            new Shift { ShiftId = 0, Name = "E4", Description = "" },
            new Shift { ShiftId = 0, Name = "L1", Description = "" },
            new Shift { ShiftId = 0, Name = "L2", Description = "" },
            new Shift { ShiftId = 0, Name = "L4", Description = "" },
        };

        Bizs = new List<Biz>()
        {
           new Biz { BizId = 1, Name = "BMS", Description = "" },
            new Biz { BizId = 2, Name = "Corp.Admin", Description = "" },
            new Biz { BizId = 3, Name = "Corp. Engg", Description = "" },
            new Biz { BizId = 4, Name = "External", Description = "" },
            new Biz { BizId = 5, Name = "Finance and Accounting", Description = "" },
            new Biz { BizId = 6, Name = "HEADS GRP (H1)", Description = "" },
            new Biz { BizId = 7, Name = "MAG GRP (L2)", Description = "" },
            new Biz { BizId = 8, Name = "MAS GRP (N3)", Description = "" },
            new Biz { BizId = 9, Name = "RE/MSL", Description = "" }
        };

        Departments = new List<Department>()
        {
            new Department { BizId = 1, Name = "New Product", Description = "" },
            new Department { BizId = 2, Name = "CMA Ops", Description = "" },
            new Department { BizId = 3, Name = "DCC", Description = "" },
            new Department { BizId = 4, Name = "Design & Automation", Description = "" },
            new Department { BizId = 5, Name = "Expat", Description = "" },
            new Department { BizId = 6, Name = "EDLC", Description = "" },
            new Department { BizId = 7, Name = "Facilities", Description = "" },
            new Department { BizId = 8, Name = "Finance/Accounting", Description = "" },
            new Department { BizId = 9, Name = "General Affairs", Description = "" },
            new Department { BizId = 10, Name = "HGA Op", Description = "" },
            new Department { BizId = 11, Name = "HRD/TTD", Description = "" },
            new Department { BizId = 12, Name = "IND Op", Description = "" },
            new Department { BizId = 13, Name = "ISD", Description = "" },
            new Department { BizId = 14, Name = "RE/MSL", Description = "" },
            new Department { BizId = 15, Name = "SCM", Description = "" },
            new Department { BizId = 16, Name = "Safety/Security", Description = "" },
            new Department { BizId = 17, Name = "TEP Sales", Description = "" },
            new Department { BizId = 18, Name = "IHCS", Description = "" }
        };

        Scopes = new List<Scope>()
        {
            new Scope { ScopeId = 1, Name = "Request", Description = "" },
            new Scope { ScopeId = 2, Name = "Incident", Description = "" },
            new Scope { ScopeId = 3, Name = "Others", Description = "" }
        };

        Categorys = new List<Category>()
        {
            new Category { CategoryId = 1,  Name = "LTS-IND", Description = "" },
            new Category { CategoryId = 2,  Name = "LTS-CMA", Description = "" },
            new Category { CategoryId = 3,  Name = "LTS-EDLC", Description = "" },
            new Category { CategoryId = 4,  Name = "LTS-IND", Description = "" },
            new Category { CategoryId = 5,  Name = "Attendance Production", Description = "" },
            new Category { CategoryId = 6,  Name = "CAPEX Online", Description = "" },
            new Category { CategoryId = 7,  Name = "Checksheet Online", Description = "" },
            new Category { CategoryId = 8,  Name = "DOR Online", Description = "" },
            new Category { CategoryId = 9,  Name = "ECN Online", Description = "" },
            new Category { CategoryId = 10, Name = "EIS", Description = "" },
            new Category { CategoryId = 11, Name = "FA Online", Description = "" },
            new Category { CategoryId = 12, Name = "HR Terminal", Description = "" },
            new Category { CategoryId = 13, Name = "Jigs and Fixture System", Description = "" },
            new Category { CategoryId = 14, Name = "Machine Qual", Description = "" },
            new Category { CategoryId = 15, Name = "OBT Online", Description = "" },
            new Category { CategoryId = 16, Name = "OEE", Description = "" },
            new Category { CategoryId = 17, Name = "OPEX Application", Description = "" },
            new Category { CategoryId = 18, Name = "PNCM Online", Description = "" },
            new Category { CategoryId = 19, Name = "Production Attendance", Description = "" },
            new Category { CategoryId = 20, Name = "Shuttle Reservation", Description = "" },
            new Category { CategoryId = 21, Name = "Synergy", Description = "" },
            new Category { CategoryId = 22, Name = "TEPM Online", Description = "" },
            new Category { CategoryId = 23, Name = "TPC Website", Description = "" },
            new Category { CategoryId = 24, Name = "TTD Application", Description = "" },
            new Category { CategoryId = 25, Name = "TTD Online", Description = "" },
            new Category { CategoryId = 26, Name = "Workstation Docs", Description = "" },
            new Category { CategoryId = 27, Name = "MSL Online", Description = "" },
            new Category { CategoryId = 28, Name = "DCC Online", Description = "" },
            new Category { CategoryId = 29, Name = "Auto Yield Report", Description = "" },
            new Category { CategoryId = 30, Name = "Manhrs Online", Description = "" },
            new Category { CategoryId = 31, Name = "CSO Online", Description = "" },
            new Category { CategoryId = 32, Name = "GRR Online", Description = "" },
            new Category { CategoryId = 33, Name = "PA Online", Description = "" },
            new Category { CategoryId = 34, Name = "Material Online", Description = "" },
            new Category { CategoryId = 35, Name = "OPEX Budget", Description = "" },
            new Category { CategoryId = 36, Name = "Clinic Online", Description = "" },
            new Category { CategoryId = 37, Name = "eHR", Description = "" },
            new Category { CategoryId = 38, Name = "TTD Application", Description = "" },
            new Category { CategoryId = 39, Name = "Fixed Asset Online", Description = "" },
            new Category { CategoryId = 40, Name = "Machine Shop Online", Description = "" },
            new Category { CategoryId = 41, Name = "Document Request Online", Description = "" },
            new Category { CategoryId = 42, Name = "HGA DATA TRANSFER", Description = "" },
            new Category { CategoryId = 43, Name = "HGA-LTS", Description = "" },
            new Category { CategoryId = 44, Name = "MRF ONLINE", Description = "" },
            new Category { CategoryId = 45, Name = "E-Learning", Description = "" },
            new Category { CategoryId = 46, Name = "TABLEAU", Description = "" },
            new Category { CategoryId = 47, Name = "Change Point Application", Description = "" },
            new Category { CategoryId = 48, Name = "GLAD", Description = "" },
            new Category { CategoryId = 49, Name = "LEGACY SR ONLINE", Description = "" },
            new Category { CategoryId = 50, Name = "ELECTRICAL YIELD", Description = "" },
            new Category { CategoryId = 51, Name = "IMMS", Description = "" },
            new Category { CategoryId = 52, Name = "TVDisplay", Description = "" },
            new Category { CategoryId = 53, Name = "OOC ALARM", Description = "" },
            new Category { CategoryId = 54, Name = "SAE SYSTEMS", Description = "" }
        };

        Users = new List<User>()
        {
            new User { UserId = 1023712, FirstName = "Marq Paul", LastName = "Gonzales", EmailAddress = "marq.gonzales@tdk.com" }
        };
    }
}

@code {

    public List<Section> Sections { get; set; } = new List<Section>();
    public List<Shift> Shifts { get; set; } = new List<Shift>();
    public List<Biz> Bizs { get; set; } = new List<Biz>();
    public List<Department> Departments { get; set; } = new List<Department>();
    public List<Scope> Scopes { get; set; } = new List<Scope>();
    public List<Category> Categorys { get; set; } = new List<Category>();
    public List<User> Users { get; set; } = new List<User>();

    public Support Support { get; set; } = new Support();

    void OnChange(int index)
    {

    }
}

@code {
    private bool isFormVisible = false;

    private void ShowForm()
    {
        isFormVisible = true;
    }

    private void HideForm()
    {
        isFormVisible = false;
    }
}

<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="6" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                Data="@data" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single" Style="margin-top: 15px; border-radius: 10px;">
    <Columns>
        <RadzenDataGridColumn TItem="MyItemType" Property="Id" Title="ID" Filterable="false" Frozen="true" Width="25px" TextAlign="TextAlign.Center" />
        <RadzenDataGridColumn TItem="MyItemType" Property="Name" Title="Name" Frozen="true" Width="100px" />
        <RadzenDataGridColumn TItem="MyItemType" Property="Description" Title="Description" />
    </Columns>
</RadzenDataGrid>

@code {
    private List<MyItemType> data;

    public class MyItemType
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
    }
}

<RadzenStack class="rz-p-0 rz-p-md-6 rz-p-lg-12">
    <RadzenCard Variant="Variant.Outlined">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                <RadzenCheckBox @bind-Value="@smooth" Name="smooth"></RadzenCheckBox>
                <RadzenLabel Text="Smooth" Component="smooth" />
            </RadzenStack>
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
                <RadzenLabel Text="Show Data Labels" Component="dataLabels" />
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>

    <RadzenChart>
        <RadzenAreaSeries Smooth="@smooth" Data="@revenue2023" CategoryProperty="Date" Title="2023" ValueProperty="Revenue" RenderingOrder="1">
            <RadzenSeriesDataLabels Visible="@showDataLabels" />
        </RadzenAreaSeries>
        <RadzenAreaSeries Smooth="@smooth" Data="@revenue2024" CategoryProperty="Date" Title="2024" LineType="LineType.Dashed" ValueProperty="Revenue">
            <RadzenSeriesDataLabels Visible="@showDataLabels" />
        </RadzenAreaSeries>
        <RadzenCategoryAxis Padding="20" />
        <RadzenValueAxis Formatter="@FormatAsUSD">
            <RadzenGridLines Visible="true" />
            <RadzenAxisTitle Text="Revenue in USD" />
        </RadzenValueAxis>
    </RadzenChart>
</RadzenStack>

@code {
    bool smooth = true;
    bool showDataLabels = false;
    class DataItem
    {
        public string Date { get; set; }
        public double Revenue { get; set; }
    }

    string FormatAsUSD(object value)
    {
        return ((double)value).ToString("C0", CultureInfo.CreateSpecificCulture("en-US"));
    }

    DataItem[] revenue2023 = new DataItem[] {
        new DataItem
        {
            Date = "Jan",
            Revenue = 234000
        },
        new DataItem
        {
            Date = "Feb",
            Revenue = 269000
        },
        new DataItem
        {
            Date = "Mar",
            Revenue = 233000
        },
        new DataItem
        {
            Date = "Apr",
            Revenue = 244000
        },
        new DataItem
        {
            Date = "May",
            Revenue = 214000
        },
        new DataItem
        {
            Date = "Jun",
            Revenue = 253000
        },
        new DataItem
        {
            Date = "Jul",
            Revenue = 274000
        },
        new DataItem
        {
            Date = "Aug",
            Revenue = 284000
        },
        new DataItem
        {
            Date = "Sept",
            Revenue = 273000
        },
        new DataItem
        {
            Date = "Oct",
            Revenue = 282000
        },
        new DataItem
        {
            Date = "Nov",
            Revenue = 289000
        },
        new DataItem
        {
            Date = "Dec",
            Revenue = 294000
        }
    };

    DataItem[] revenue2024 = new DataItem[] {
        new DataItem
        {
            Date = "Jan",
            Revenue = 334000
        },
        new DataItem
        {
            Date = "Feb",
            Revenue = 369000
        },
        new DataItem
        {
            Date = "Mar",
            Revenue = 333000
        },
        new DataItem
        {
            Date = "Apr",
            Revenue = 344000
        },
        new DataItem
        {
            Date = "May",
            Revenue = 314000
        },
        new DataItem
        {
            Date = "Jun",
            Revenue = 353000
        },
        new DataItem
        {
            Date = "Jul",
            Revenue = 374000
        },
        new DataItem
        {
            Date = "Aug",
            Revenue = 384000
        },
        new DataItem
        {
            Date = "Sept",
            Revenue = 373000
        },
        new DataItem
        {
            Date = "Oct",
            Revenue = 382000
        },
        new DataItem
        {
            Date = "Nov",
            Revenue = 389000
        },
        new DataItem
        {
            Date = "Dec",
            Revenue = 394000
        }
    };
}
@page "/"

@using ISDSupportLogsManager.Shared.Model
@using ISDSupportLogsManager.Shared.Model.Reports
@using Radzen
@using Radzen.Blazor
@using System.Globalization

<div class="container" style="padding-left: 0; padding-right: 0;">
    <div class="d-flex gap-2">
        <!-- First square with icon -->
        <button class="square rounded-square border-0">
            <img src="https://img.icons8.com/emoji/48/card-file-box-emoji.png" alt="Icon 1" class="icon">
        </button>
        <!-- Flexible div -->
        <div class="flexible rounded-square d-flex justify-content-between align-items-center px-2">
            <div class="p-2" style="margin: 0; color: white; font-weight: bold;">Infrastructure</div>
            <div class="p-2" style="margin: 0; color: white; font-weight: normal; font-size: 0.9rem;">150 logs</div>
        </div>
        <!-- Third square with icon -->
        <button class="square-small rounded-square" style="border: none; cursor: pointer;" @onclick="ShowForm">
            <img src="https://img.icons8.com/?size=100&id=JGe51z9QiUjz&format=png&color=000000" alt="Icon 3" class="icon">
        </button>
        <!-- Third square with icon -->
        <button class="square-small rounded-square" style="border: none; cursor: pointer;" @onclick="ShowForm">
            <img src="https://img.icons8.com/color/48/microsoft-excel-2019--v1.png" alt="Icon 3" class="icon">
        </button>
        <!-- Fourth square with icon -->
        <div class="square-small rounded-square">
            <img src="https://img.icons8.com/?size=100&id=102557&format=png&color=000000" alt="Icon 4" class="icon">
        </div>
    </div>
</div>

@if (isFormVisible)
{
    <div class="modal-overlay" @onclick="HideForm">
        <div class="modal-container" @onclick:stopPropagation="true">
            <form>
                <RadzenSteps Change=@OnChange @rendermode="RenderMode.InteractiveServer">
                    <Steps>
                        <RadzenStepsItem Text="Where">
                            <div class="form-container">
                                <div class="form-group">
                                    <RadzenLabel Text="Shift" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                    <RadzenDropDownDataGrid @bind-Value=@Support.Shift Data=@Shifts Name="DropDownDataGridBindValue"
                                                            TextProperty="@("Name")" class="dropdown" />
                                </div>
                                <div class="form-group">
                                    <RadzenLabel Text="Business Area" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                    <RadzenDropDownDataGrid @bind-Value=@Support.Biz Data=@Bizs Name="DropDownDataGridBindValue"
                                                            TextProperty="@("Name")" class="dropdown" />
                                </div>
                                <div class="form-group">
                                    <RadzenLabel Text="Department" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                    <RadzenDropDownDataGrid @bind-Value=@Support.Department Data=@Departments Name="DropDownDataGridBindValue"
                                                            TextProperty="@("Name")" class="dropdown" />
                                </div>
                            </div>
                        </RadzenStepsItem>
                        <RadzenStepsItem Text="When">
                            <div class="form-container">
                                <div class="form-group">
                                    <RadzenLabel Text="Start Date" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                    <RadzenDatePicker @bind-Value=@Support.StartDate class="datepicker" />
                                    <RadzenDatePicker @bind-Value=@Support.StartTime ShowSeconds="true" DateFormat="HH:mm" Name="DatePickerTimeOnlyType" class="timepicker" />
                                </div>
                                <div class="form-group">
                                    <RadzenLabel Text="End Date" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                    <RadzenDatePicker @bind-Value=@Support.EndDate class="datepicker" />
                                    <RadzenDatePicker @bind-Value=@Support.EndTime ShowSeconds="true" DateFormat="HH:mm" Name="DatePickerTimeOnlyType" class="timepicker" />
                                </div>
                            </div>
                        </RadzenStepsItem>
                        <RadzenStepsItem Text="What">
                            <div class="form-container">
                                <div class="form-group">
                                    <RadzenLabel Text="Category" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                    <RadzenDropDownDataGrid @bind-Value=@Support.Category Data=@Categorys Name="DropDownDataGridBindValue"
                                                            TextProperty="@("Name")" class="dropdown" />
                                </div>
                                <div class="form-group">
                                    <RadzenLabel Text="Details" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                    <RadzenTextArea @bind-Value=@Support.Details Style="width: 100%" aria-label="TextArea" />
                                </div>
                                <div class="form-group">
                                    <RadzenLabel Text="Cause" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                    <RadzenTextArea @bind-Value=@Support.Cause Style="width: 100%" aria-label="TextArea" />
                                </div>
                            </div>
                        </RadzenStepsItem>
                        <RadzenStepsItem Text="How">
                            <div class="form-group">
                                <RadzenLabel Text="Action Taken" Component="DropDownDataGridBindValue" class="dropdown-label" />
                                <RadzenTextArea @bind-Value=@Support.ActionTaken Style="width: 100%" aria-label="TextArea" />
                            </div>
                        </RadzenStepsItem>
                        <RadzenStepsItem Text="Summary">
                            <div class="form-container">
                                <div class="rz-p-0 rz-p-md-0">
                                    <RadzenCard class="rz-shadow-0 rz-border-radius-0 rz-p-4">
                                        <RadzenText TextStyle="TextStyle.H6"><strong>Review Information</strong></RadzenText>
                                        <RadzenRow RowGap="0">
                                            <RadzenColumn SizeSM="6">
                                                <RadzenText TextStyle="TextStyle.Overline" Text="Section" class="rz-display-flex rz-mt-2 rz-my-0"></RadzenText>
                                                <RadzenText TextStyle="TextStyle.Body1" Text=Value></RadzenText>
                                                <RadzenText TextStyle="TextStyle.Overline" Text="Business Area" class="rz-display-flex rz-mt-2 rz-mb-0"></RadzenText>
                                                <RadzenText TextStyle="TextStyle.Body1" Text=@Support.Biz.Name></RadzenText>
                                            </RadzenColumn>
                                            <RadzenColumn SizeSM="6">
                                                <RadzenText TextStyle="TextStyle.Overline" Text="Shift" class="rz-display-flex rz-mt-2 rz-my-0"></RadzenText>
                                                <RadzenText TextStyle="TextStyle.Body1" Text=@Support.Shift.Name></RadzenText>
                                                <RadzenText TextStyle="TextStyle.Overline" Text="Department" class="rz-display-flex rz-mt-2 rz-mb-0"></RadzenText>
                                                <RadzenText TextStyle="TextStyle.Body1" Text=@Support.Department.Name></RadzenText>
                                            </RadzenColumn>
                                            <RadzenColumn SizeSM="6">
                                                <RadzenText TextStyle="TextStyle.Overline" Text="Start Date and Time" class="rz-display-flex rz-mt-2 rz-mb-0"></RadzenText>
                                                <RadzenText TextStyle="TextStyle.Body1" Text=@Support.StartDateTime.ToString()></RadzenText>
                                            </RadzenColumn>
                                            <RadzenColumn SizeSM="6">
                                                <RadzenText TextStyle="TextStyle.Overline" Text="End Date and Time" class="rz-display-flex rz-mt-2 rz-mb-0"></RadzenText>
                                                <RadzenText TextStyle="TextStyle.Body1" Text=@Support.EndDateTime.ToString()></RadzenText>
                                            </RadzenColumn>
                                            <RadzenColumn SizeSM="6">
                                                <RadzenText TextStyle="TextStyle.Overline" Text="Elapsed Minutes" class="rz-display-flex rz-mt-2 rz-mb-0"></RadzenText>
                                                <RadzenText TextStyle="TextStyle.Body1" Text=@Support.ElapsedMinutes.ToString()></RadzenText>
                                            </RadzenColumn>
                                            <RadzenColumn SizeSM="6">
                                                <RadzenText TextStyle="TextStyle.Overline" Text="Category" class="rz-display-flex rz-mt-2 rz-mb-0"></RadzenText>
                                                <RadzenText TextStyle="TextStyle.Body1" Text=@Support.Category.Name></RadzenText>
                                            </RadzenColumn>
                                            <RadzenColumn SizeSM="12">
                                                <RadzenText TextStyle="TextStyle.Overline" Text="Details" class="rz-display-flex rz-mt-2 rz-mb-0"></RadzenText>
                                                <RadzenText TextStyle="TextStyle.Body1" Text=@Support.Details></RadzenText>
                                            </RadzenColumn>
                                            <RadzenColumn SizeSM="12">
                                                <RadzenText TextStyle="TextStyle.Overline" Text="Cause" class="rz-display-flex rz-mt-2 rz-mb-0"></RadzenText>
                                                <RadzenText TextStyle="TextStyle.Body1" Text=@Support.Cause></RadzenText>
                                            </RadzenColumn>
                                            <RadzenColumn SizeSM="12">
                                                <RadzenText TextStyle="TextStyle.Overline" Text="Action Taken" class="rz-display-flex rz-mt-2 rz-mb-0"></RadzenText>
                                                <RadzenText TextStyle="TextStyle.Body1" Text=@Support.ActionTaken></RadzenText>
                                            </RadzenColumn>
                                        </RadzenRow>
                                    </RadzenCard>
                                </div>
                            </div>
                            <div class="button-container" style="display: flex; justify-content: space-between;">
                                <button type="button" @onclick="HideForm" class="btn btn-danger">Cancel</button>
                                <button type="submit" class="btn btn-success">Submit</button>
                            </div>
                        </RadzenStepsItem>
                    </Steps>
                </RadzenSteps>
            </form>
        </div>
    </div>
}

@code {

    protected override void OnInitialized()
    {
        data = new List<MyItemType>
        {
            new MyItemType { Id = 1, Name = "Item 1", Description = "Description 1" },
            new MyItemType { Id = 2, Name = "Item 2", Description = "Description 2" },
            new MyItemType { Id = 3, Name = "Item 3", Description = "Description 3" }
        };

        Sections = new List<Section>()
        {
            new Section { SectionId = 0, Name = "INFRA", Description = "Infrastructure" },
            new Section { SectionId = 0, Name = "ERPS", Description = "SAP Systems" },
            new Section { SectionId = 0, Name = "NON PROD", Description = "Admin and HR" }
        };

        Shifts = new List<Shift>()
        {
            new Shift { ShiftId = 0, Name = "D3", Description = "" },
            new Shift { ShiftId = 0, Name = "D4", Description = "" },
            new Shift { ShiftId = 0, Name = "E3", Description = "" },
            new Shift { ShiftId = 0, Name = "E4", Description = "" },
            new Shift { ShiftId = 0, Name = "L1", Description = "" },
            new Shift { ShiftId = 0, Name = "L2", Description = "" },
            new Shift { ShiftId = 0, Name = "L4", Description = "" },
        };

        Bizs = new List<Biz>()
        {
           new Biz { BizId = 1, Name = "BMS", Description = "" },
            new Biz { BizId = 2, Name = "Corp.Admin", Description = "" },
            new Biz { BizId = 3, Name = "Corp. Engg", Description = "" }
        };

        Departments = new List<Department>()
        {
            new Department { BizId = 1, Name = "New Product", Description = "" },
            new Department { BizId = 2, Name = "CMA Ops", Description = "" },
            new Department { BizId = 3, Name = "DCC", Description = "" }
        };

        Scopes = new List<Scope>()
        {
            new Scope { ScopeId = 1, Name = "Request", Description = "" },
            new Scope { ScopeId = 2, Name = "Incident", Description = "" },
            new Scope { ScopeId = 3, Name = "Others", Description = "" }
        };

        Categorys = new List<Category>()
        {
            new Category { CategoryId = 1,  Name = "LTS-IND", Description = "" },
            new Category { CategoryId = 2,  Name = "LTS-CMA", Description = "" },
            new Category { CategoryId = 3,  Name = "LTS-EDLC", Description = "" }
        };

        Users = new List<User>()
        {
            new User { UserId = 1023712, FirstName = "Marq Paul", LastName = "Gonzales", EmailAddress = "marq.gonzales@tdk.com" }
        };

        SupportLookups.Add(
           new SupportLookup()
               {
                   ControlNo = "001",
                   SectionName = "Manufacturing",
                   ShiftName = "L4",
                   BizName = "MAG-N3",
                   DepartmentName = "IND Operations",
                   ScopeName = "LTS",
                   CategoryId = 1,
                   CategoryName = "Incident",
                   UserFirstName = "Juan",
                   UserLastName = "Mayor",
                   StartDate = DateOnly.Parse("10/19/2024"),
                   StartTime = TimeOnly.Parse("01:00:00 PM"),
                   EndDate = DateOnly.Parse("10/19/2024"),
                   EndTime = TimeOnly.Parse("02:00:00 PM"),
                   Details = "Deployment of Travellers",
                   Cause = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud",
                   ActionTaken = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud"
               });

        SupportLookups.Add(
           new SupportLookup()
               {
                   ControlNo = "002",
                   SectionName = "Manufacturing",
                   ShiftName = "L4",
                   BizName = "MAG-N3",
                   DepartmentName = "IND Operations",
                   ScopeName = "LTS",
                   CategoryId = 1,
                   CategoryName = "Request",
                   UserFirstName = "Juan",
                   UserLastName = "Mayor",
                   StartDate = DateOnly.Parse("10/19/2024"),
                   StartTime = TimeOnly.Parse("01:00:00 PM"),
                   EndDate = DateOnly.Parse("10/19/2024"),
                   EndTime = TimeOnly.Parse("02:00:00 PM"),
                   Details = "Deployment of Travellers",
                   Cause = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud",
                   ActionTaken = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud"
               });

        SupportLookups.Add(
           new SupportLookup()
               {
                   ControlNo = "003",
                   SectionName = "Manufacturing",
                   ShiftName = "L4",
                   BizName = "MAG-N3",
                   DepartmentName = "IND Operations",
                   ScopeName = "LTS",
                   CategoryId = 2,
                   CategoryName = "Incident",
                   UserFirstName = "Juan",
                   UserLastName = "Mayor",
                   StartDate = DateOnly.Parse("10/18/2024"),
                   StartTime = TimeOnly.Parse("01:00:00 PM"),
                   EndDate = DateOnly.Parse("10/18/2024"),
                   EndTime = TimeOnly.Parse("02:00:00 PM"),
                   Details = "Deployment of Travellers",
                   Cause = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud",
                   ActionTaken = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud"
               });

        SupportLookups.Add(
           new SupportLookup()
               {
                   ControlNo = "004",
                   SectionName = "Manufacturing",
                   ShiftName = "L4",
                   BizName = "MAG-N3",
                   DepartmentName = "IND Operations",
                   ScopeName = "LTS",
                   CategoryId = 1,
                   CategoryName = "Request",
                   UserFirstName = "Juan",
                   UserLastName = "Mayor",
                   StartDate = DateOnly.Parse("10/18/2024"),
                   StartTime = TimeOnly.Parse("01:00:00 PM"),
                   EndDate = DateOnly.Parse("10/18/2024"),
                   EndTime = TimeOnly.Parse("02:00:00 PM"),
                   Details = "Deployment of Travellers",
                   Cause = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud",
                   ActionTaken = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud"
               });

        SupportLookups.Add(
           new SupportLookup()
               {
                   ControlNo = "005",
                   SectionName = "Manufacturing",
                   ShiftName = "L4",
                   BizName = "MAG-N3",
                   DepartmentName = "IND Operations",
                   ScopeName = "LTS",
                   CategoryId = 2,
                   CategoryName = "Incident",
                   UserFirstName = "Juan",
                   UserLastName = "Mayor",
                   StartDate = DateOnly.Parse("10/16/2024"),
                   StartTime = TimeOnly.Parse("01:00:00 PM"),
                   EndDate = DateOnly.Parse("10/16/2024"),
                   EndTime = TimeOnly.Parse("02:00:00 PM"),
                   Details = "Deployment of Travellers",
                   Cause = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud",
                   ActionTaken = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud"
               });

        SupportLookups.Add(
           new SupportLookup()
               {
                   ControlNo = "006",
                   SectionName = "Manufacturing",
                   ShiftName = "L4",
                   BizName = "MAG-N3",
                   DepartmentName = "CMA Operations",
                   ScopeName = "LTS",
                   CategoryId = 1,
                   CategoryName = "Request",
                   UserFirstName = "Juan",
                   UserLastName = "Mayor",
                   StartDate = DateOnly.Parse("10/16/2024"),
                   StartTime = TimeOnly.Parse("01:00:00 PM"),
                   EndDate = DateOnly.Parse("10/16/2024"),
                   EndTime = TimeOnly.Parse("02:00:00 PM"),
                   Details = "Deployment of Travellers",
                   Cause = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud",
                   ActionTaken = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud"
               });

        SupportLookups.Add(
           new SupportLookup()
               {
                   ControlNo = "007",
                   SectionName = "Manufacturing",
                   ShiftName = "L4",
                   BizName = "MAG-N3",
                   DepartmentName = "IND Operations",
                   ScopeName = "LTS",
                   CategoryId = 2,
                   CategoryName = "Incident",
                   UserFirstName = "Juan",
                   UserLastName = "Mayor",
                   StartDate = DateOnly.Parse("10/14/2024"),
                   StartTime = TimeOnly.Parse("01:00:00 PM"),
                   EndDate = DateOnly.Parse("10/14/2024"),
                   EndTime = TimeOnly.Parse("02:00:00 PM"),
                   Details = "Deployment of Travellers",
                   Cause = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud",
                   ActionTaken = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud"
               });

        SupportLookups.Add(
           new SupportLookup()
               {
                   ControlNo = "008",
                   SectionName = "Manufacturing",
                   ShiftName = "L4",
                   BizName = "MAG-N3",
                   DepartmentName = "IND Operations",
                   ScopeName = "LTS",
                   CategoryId = 1,
                   CategoryName = "Request",
                   UserFirstName = "Juan",
                   UserLastName = "Mayor",
                   StartDate = DateOnly.Parse("10/14/2024"),
                   StartTime = TimeOnly.Parse("01:00:00 PM"),
                   EndDate = DateOnly.Parse("10/14/2024"),
                   EndTime = TimeOnly.Parse("02:00:00 PM"),
                   Details = "Deployment of Travellers",
                   Cause = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud",
                   ActionTaken = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud"
               });

        SupportLookups.Add(
         new SupportLookup()
             {
                 CategoryId = (from x in SupportLookups select x.CategoryId).Min() - 1,
                 CategoryName = "",
                 StartDate = (from x in SupportLookups select x.StartDate).Min(),
                 StartTime = TimeOnly.Parse("01:00:00 PM"),
                 EndDate = (from x in SupportLookups select x.StartDate).Max(),
                 EndTime = TimeOnly.Parse("02:00:00 PM"),
             }
        );

        SupportLookups.Add(
         new SupportLookup()
             {
                 CategoryId = (from x in SupportLookups select x.CategoryId).Min() + 1,
                 StartDate = (from x in SupportLookups select x.StartDate).Min(),
                 StartTime = TimeOnly.Parse("01:00:00 PM"),
                 EndDate = (from x in SupportLookups select x.StartDate).Max(),
                 EndTime = TimeOnly.Parse("02:00:00 PM"),
             }
        );

        IncidentSupportLookups = (from x in SupportLookups
                                  where x.CategoryName == "Incident"
                                  select x).ToList();

        RequestSupportLookups = (from x in SupportLookups
                                 where x.CategoryName == "Request"
                                 select x).ToList();

        CategoryPerMonth = SupportLookups.GroupBy(i => new[] { i.StartMonth, i.CategoryId })
                                         .Select(g => new CategoryPerMonthReport()
                                         {
                                             Month = g.Key.M

                                         })

                                         Support

    items
    .GroupBy(i => i.Category)
    .Select(g => new
    {
    Category = g.Key,
    Count = g.Count()
    });
    }
}

@code {

    public List<Section> Sections { get; set; } = new List<Section>();
    public List<Shift> Shifts { get; set; } = new List<Shift>();
    public List<Biz> Bizs { get; set; } = new List<Biz>();
    public List<Department> Departments { get; set; } = new List<Department>();
    public List<Scope> Scopes { get; set; } = new List<Scope>();
    public List<Category> Categorys { get; set; } = new List<Category>();
    public List<User> Users { get; set; } = new List<User>();

    public Support Support { get; set; } = new Support();
    public List<SupportLookup> SupportLookups { get; set; } = new List<SupportLookup>();
    public List<SupportLookup> IncidentSupportLookups { get; set; } = new List<SupportLookup>();
    public List<SupportLookup> RequestSupportLookups { get; set; } = new List<SupportLookup>();
    public SupportLookup SupportLookup { get; set; } = new SupportLookup();
    public List<CategoryPerMonthReport> CategoryPerMonth { get; set; } = new List<CategoryPerMonthReport>();

    void OnChange(int index)
    {

    }
}

@code {
    private bool isFormVisible = false;

    private void ShowForm()
    {
        isFormVisible = true;
    }

    private void HideForm()
    {
        isFormVisible = false;
    }
}

<div class="container pl-0 pr-0 pb-3">
    <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="true" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="7" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                    Data="@SupportLookups" LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single" Style="margin-top: 15px; border-radius: 10px; ">
        <Columns>
            <RadzenDataGridColumn TItem="SupportLookup" Property="ControlNo" Title="ID" Filterable="false" Frozen="true" Width="100px" TextAlign="TextAlign.Center" />
            <RadzenDataGridColumn TItem="SupportLookup" Property="CategoryName" Title="Category" Frozen="true" Width="140px" />
            <RadzenDataGridColumn TItem="SupportLookup" Property="Details" Title="Details" Width="300px" />
            <RadzenDataGridColumn TItem="SupportLookup" Property="BizName" Title="Business" Width="150px" />
            <RadzenDataGridColumn TItem="SupportLookup" Property="ShiftName" Title="Shift" Width="120px" />
            <RadzenDataGridColumn TItem="SupportLookup" Property="DepartmentName" Title="Department" Width="180px" />
            <RadzenDataGridColumn TItem="SupportLookup" Property="ScopeName" Title="Scope" Width="130px" />
            <RadzenDataGridColumn TItem="SupportLookup" Property="StartDateTime" Title="Start" Width="170px" />
            <RadzenDataGridColumn TItem="SupportLookup" Property="EndDateTime" Title="End" Width="170px" />
            <RadzenDataGridColumn TItem="SupportLookup" Property="UserFullName" Title="Posted By" Width="150px" />
        </Columns>
    </RadzenDataGrid>
</div>

@code {
    private List<MyItemType> data;

    public class MyItemType
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
    }
}

<RadzenStack class="rz-p-0 rz-p-md-1 rz-p-lg-1">

    <RadzenCard Variant="Variant.Outlined">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                <RadzenCheckBox @bind-Value="@smooth" Name="smooth"></RadzenCheckBox>
                <RadzenLabel Text="Smooth" Component="smooth" />
            </RadzenStack>
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
                <RadzenLabel Text="Show Data Labels" Component="dataLabels" />
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>

    <RadzenChart>
        <RadzenColumnSeries Data="@IncidentSupportLookups" CategoryProperty="Quarter" Title="2024" LineType="LineType.Dashed" ValueProperty="Revenue">
            <RadzenSeriesDataLabels Visible="@showDataLabels" />
        </RadzenColumnSeries>
        <RadzenColumnOptions Radius="5" />
        <RadzenValueAxis>
            <RadzenGridLines Visible="true" />
            <RadzenAxisTitle Text="Categories" />
        </RadzenValueAxis>
    </RadzenChart>

    <RadzenChart>
        <RadzenAreaSeries Smooth="@smooth" Data="@IncidentSupportLookups" CategoryProperty="StartDateTime" Title="Incident" ValueProperty="CategoryId" RenderingOrder="1">
            <RadzenSeriesDataLabels Visible="@showDataLabels" />
        </RadzenAreaSeries>
        <RadzenAreaSeries Smooth="@smooth" Data="@RequestSupportLookups" CategoryProperty="StartDateTime" Title="Request" LineType="LineType.Dashed" ValueProperty="CategoryId">
            <RadzenSeriesDataLabels Visible="@showDataLabels" />
        </RadzenAreaSeries>
        <RadzenCategoryAxis Padding="20" />
        <RadzenValueAxis>
            <RadzenGridLines Visible="true" />
            <RadzenAxisTitle Text="Categories" />
        </RadzenValueAxis>
    </RadzenChart>
</RadzenStack>

@code {
    bool smooth = true;
    bool showDataLabels = false;

    string FormatAsUSD(object value)
    {
        return ((double)value).ToString("C0", CultureInfo.CreateSpecificCulture("en-US"));
    }
}
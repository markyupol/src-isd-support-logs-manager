@page "/"

@using Radzen
@using Radzen.Blazor
@using System.Globalization

<div class="container" style="padding-left: 0; padding-right: 0;">
    <div class="d-flex gap-2">
        <!-- First square with icon -->
        <button class="square rounded-square border-0">
            <img src="https://img.icons8.com/emoji/48/card-file-box-emoji.png" alt="Icon 1" class="icon">
        </button>

        <!-- Flexible div -->
        <div class="flexible rounded-square d-flex justify-content-between align-items-center px-2">
            <div class="p-2" style="margin: 0; color: white; font-weight: bold;">Infrastructure</div>
            <div class="p-2" style="margin: 0; color: white; font-weight: normal; font-size: 0.9rem;">150 logs</div>
        </div>

        <!-- Third square with icon -->
        <div class="square-small rounded-square">
            <img src="https://img.icons8.com/fluency/48/add--v1.png" alt="Icon 3" class="icon">
        </div>

        <!-- Fourth square with icon -->
        <div class="square-small rounded-square">
            <img src="https://img.icons8.com/color/48/microsoft-excel-2019--v1.png" alt="Icon 4" class="icon">
        </div>
    </div>
</div>

<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="6" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                Data="@data" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single" Style="margin-top: 15px; border-radius: 10px;">
    <Columns>
        <RadzenDataGridColumn TItem="MyItemType" Property="Id" Title="ID" Filterable="false" Frozen="true" Width="25px" TextAlign="TextAlign.Center" />
        <RadzenDataGridColumn TItem="MyItemType" Property="Name" Title="Name" Frozen="true" Width="100px" />
        <RadzenDataGridColumn TItem="MyItemType" Property="Description" Title="Description" />
    </Columns>
</RadzenDataGrid>

@code {
    private List<MyItemType> data;

    protected override void OnInitialized()
    {
        // Initialize your data here
        data = new List<MyItemType>
        {
            new MyItemType { Id = 1, Name = "Item 1", Description = "Description 1" },
            new MyItemType { Id = 2, Name = "Item 2", Description = "Description 2" },
            new MyItemType { Id = 3, Name = "Item 3", Description = "Description 3" },
            new MyItemType { Id = 4, Name = "Item 4", Description = "Description 4" },
            new MyItemType { Id = 1, Name = "Item 1", Description = "Description 1" },
            new MyItemType { Id = 2, Name = "Item 2", Description = "Description 2" },
            new MyItemType { Id = 3, Name = "Item 3", Description = "Description 3" },
            new MyItemType { Id = 4, Name = "Item 4", Description = "Description 4" },
            new MyItemType { Id = 1, Name = "Item 1", Description = "Description 1" },
            new MyItemType { Id = 2, Name = "Item 2", Description = "Description 2" },
            new MyItemType { Id = 3, Name = "Item 3", Description = "Description 3" },
            new MyItemType { Id = 4, Name = "Item 4", Description = "Description 4" },
            new MyItemType { Id = 1, Name = "Item 1", Description = "Description 1" },
            new MyItemType { Id = 2, Name = "Item 2", Description = "Description 2" },
            new MyItemType { Id = 3, Name = "Item 3", Description = "Description 3" },
            new MyItemType { Id = 4, Name = "Item 4", Description = "Description 4" },
            // Add more items as needed
        };
    }

    public class MyItemType
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
    }
}

<RadzenStack class="rz-p-0 rz-p-md-6 rz-p-lg-12">
    <RadzenCard Variant="Variant.Outlined">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                <RadzenCheckBox @bind-Value="@smooth" Name="smooth"></RadzenCheckBox>
                <RadzenLabel Text="Smooth" Component="smooth" />
            </RadzenStack>
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
                <RadzenLabel Text="Show Data Labels" Component="dataLabels" />
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>

    <RadzenChart>
        <RadzenAreaSeries Smooth="@smooth" Data="@revenue2023" CategoryProperty="Date" Title="2023" ValueProperty="Revenue" RenderingOrder="1">
            <RadzenSeriesDataLabels Visible="@showDataLabels" />
        </RadzenAreaSeries>
        <RadzenAreaSeries Smooth="@smooth" Data="@revenue2024" CategoryProperty="Date" Title="2024" LineType="LineType.Dashed" ValueProperty="Revenue">
            <RadzenSeriesDataLabels Visible="@showDataLabels" />
        </RadzenAreaSeries>
        <RadzenCategoryAxis Padding="20" />
        <RadzenValueAxis Formatter="@FormatAsUSD">
            <RadzenGridLines Visible="true" />
            <RadzenAxisTitle Text="Revenue in USD" />
        </RadzenValueAxis>
    </RadzenChart>
</RadzenStack>

@code {
    bool smooth = true;
    bool showDataLabels = false;
    class DataItem
    {
        public string Date { get; set; }
        public double Revenue { get; set; }
    }

    string FormatAsUSD(object value)
    {
        return ((double)value).ToString("C0", CultureInfo.CreateSpecificCulture("en-US"));
    }

    DataItem[] revenue2023 = new DataItem[] {
        new DataItem
        {
            Date = "Jan",
            Revenue = 234000
        },
        new DataItem
        {
            Date = "Feb",
            Revenue = 269000
        },
        new DataItem
        {
            Date = "Mar",
            Revenue = 233000
        },
        new DataItem
        {
            Date = "Apr",
            Revenue = 244000
        },
        new DataItem
        {
            Date = "May",
            Revenue = 214000
        },
        new DataItem
        {
            Date = "Jun",
            Revenue = 253000
        },
        new DataItem
        {
            Date = "Jul",
            Revenue = 274000
        },
        new DataItem
        {
            Date = "Aug",
            Revenue = 284000
        },
        new DataItem
        {
            Date = "Sept",
            Revenue = 273000
        },
        new DataItem
        {
            Date = "Oct",
            Revenue = 282000
        },
        new DataItem
        {
            Date = "Nov",
            Revenue = 289000
        },
        new DataItem
        {
            Date = "Dec",
            Revenue = 294000
        }
    };

    DataItem[] revenue2024 = new DataItem[] {
        new DataItem
        {
            Date = "Jan",
            Revenue = 334000
        },
        new DataItem
        {
            Date = "Feb",
            Revenue = 369000
        },
        new DataItem
        {
            Date = "Mar",
            Revenue = 333000
        },
        new DataItem
        {
            Date = "Apr",
            Revenue = 344000
        },
        new DataItem
        {
            Date = "May",
            Revenue = 314000
        },
        new DataItem
        {
            Date = "Jun",
            Revenue = 353000
        },
        new DataItem
        {
            Date = "Jul",
            Revenue = 374000
        },
        new DataItem
        {
            Date = "Aug",
            Revenue = 384000
        },
        new DataItem
        {
            Date = "Sept",
            Revenue = 373000
        },
        new DataItem
        {
            Date = "Oct",
            Revenue = 382000
        },
        new DataItem
        {
            Date = "Nov",
            Revenue = 389000
        },
        new DataItem
        {
            Date = "Dec",
            Revenue = 394000
        }
    };
}